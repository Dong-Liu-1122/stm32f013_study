; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\main.o --asm_dir=.\ --list_dir=.\ --depend=.\main.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\App\inc -I..\Driver\inc -I..\Libraries\CMSIS\Core\inc -I..\Libraries\CMSIS\Device\inc -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\HalIterface\inc -I..\User\inc -I.\RTE\_Target_1 -IC:\Users\18811\Documents\Keil\STM32F1xx_DFP\1.0.5\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=529 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\main.crf ..\User\src\Main.c]
                          THUMB

                          AREA ||i.Hardware_AllInit||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  Hardware_AllInit PROC
;;;42     
;;;43     void Hardware_AllInit(void)
000000  b510              PUSH     {r4,lr}
;;;44     {
;;;45     	
;;;46     	Bsp_LedInit();
000002  f7fffffe          BL       Bsp_LedInit
;;;47     	
;;;48     
;;;49     	
;;;50     	
;;;51     	
;;;52     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);	// 设置中断优先级分组2
000006  f44f60a0          MOV      r0,#0x500
00000a  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;53     	delay_init();	    	 		//延时函数初始化	  
00000e  f7fffffe          BL       delay_init
;;;54     			  			//初始化与LED连接的硬件接口
;;;55     //	Usart_Init(USART1, 9600);		//串口1初始化,用于调试信息输出
;;;56     	uart_init(1, 9600);
000012  f44f5116          MOV      r1,#0x2580
000016  2001              MOVS     r0,#1
000018  f7fffffe          BL       uart_init
;;;57     //	printf (" \r\n mcu enter main \r\n");
;;;58     	
;;;59     //	stack_test();
;;;60     //	heap_test();
;;;61     //	pack_test();
;;;62     //	macro_define_test();
;;;63     //	cpu_mem_endian();
;;;64     	
;;;65     	
;;;66     #ifdef ADC_FUNC_TEST
;;;67     	Adc_Init();
;;;68     	App_AdcTest();
;;;69     	
;;;70     #endif	//ADC_FUNC_TEST
;;;71     	
;;;72     #ifdef TIMER_FUNC_TEST
;;;73     	timer_init(3);
;;;74     #endif
;;;75     
;;;76     #if SPI_COMM_MODE
;;;77     	#ifdef HARD_SPI_COMM
;;;78     	spi_master_init(1);
00001c  2001              MOVS     r0,#1
00001e  f7fffffe          BL       spi_master_init
;;;79     	#ifdef OLED_FUNC_TEST
;;;80     	oled_init();
000022  f7fffffe          BL       oled_init
;;;81     	oled_dis_logo();
000026  f7fffffe          BL       oled_dis_logo
;;;82     //	oled_dis_picture(0, 0, 128, 7, bmp_buff);
;;;83     //	oled_dis_num(60, 4, 1314, 4, 16);
;;;84     //	oled_dis_one_char(5, 2, 'A');
;;;85     //	oled_dis_one_char(12, 2, 'B');
;;;86     //	oled_dis_one_char(129, 2, 'B');
;;;87     //	oled_dis_chinese(33,1,0);
;;;88     //	oled_dis_chinese(53,1,1);
;;;89     //	oled_dis_chinese(73,1,2);
;;;90     //	oled_dis_chinese(93,1,3);
;;;91     //	oled_dis_chinese(33,5,4);
;;;92     //	oled_dis_chinese(53,5,5);
;;;93     //	oled_dis_chinese(73,5,6);
;;;94     //	oled_dis_chinese(50, 3, 8);
;;;95     //	oled_dis_chinese(80, 3, 9);
;;;96     	#endif
;;;97     	Flash_TestDataInit();
00002a  f7fffffe          BL       Flash_TestDataInit
;;;98     	ulFlashIdVal = spi_flash_read_id();
00002e  f7fffffe          BL       spi_flash_read_id
000032  4908              LDR      r1,|L1.84|
000034  6008              STR      r0,[r1,#0]  ; ulFlashIdVal
;;;99     	printf("Hard --1 spi flash val is 0x%0X \r\n", ulFlashIdVal);
000036  4608              MOV      r0,r1
000038  6801              LDR      r1,[r0,#0]  ; ulFlashIdVal
00003a  a007              ADR      r0,|L1.88|
00003c  f7fffffe          BL       __2printf
;;;100    	ulFlashIdVal = spi_flash_read_id();
000040  f7fffffe          BL       spi_flash_read_id
000044  4903              LDR      r1,|L1.84|
000046  6008              STR      r0,[r1,#0]  ; ulFlashIdVal
;;;101    	printf("Hard --2 Spi flash val is 0x%0X \r\n", ulFlashIdVal);
000048  4608              MOV      r0,r1
00004a  6801              LDR      r1,[r0,#0]  ; ulFlashIdVal
00004c  a00b              ADR      r0,|L1.124|
00004e  f7fffffe          BL       __2printf
;;;102    	#endif	//HARD_SPI_COMM
;;;103    #else
;;;104    	#ifdef SOFT_SPI_COMM
;;;105    	Spi_GpioInit();
;;;106    	Flash_TestDataInit();
;;;107    	
;;;108    	ulFlashIdVal = Flash_ReadJEDECID();
;;;109    	printf("Spi flash val is 0x%0X \r\n", ulFlashIdVal);
;;;110    	
;;;111    //	W25_WriteReadBytes();
;;;112    //	W25_CircleWriteRead(0x01, 0x00, g_WriteData, g_DataTmpBuffer, 256);	//flash循环读写测试
;;;113    	#endif	//SOFT_SPI_COMM
;;;114    #endif	//SPI_COMM_MODE	
;;;115    
;;;116    #ifdef I2C_HTU_TEST
;;;117    	Htu_Init();
;;;118    	ee_at24cxx_init();
;;;119    #endif
;;;120    }
000052  bd10              POP      {r4,pc}
;;;121    
                          ENDP

                  |L1.84|
                          DCD      ulFlashIdVal
                  |L1.88|
000058  48617264          DCB      "Hard --1 spi flash val is 0x%0X \r\n",0
00005c  202d2d31
000060  20737069
000064  20666c61
000068  73682076
00006c  616c2069
000070  73203078
000074  25305820
000078  0d0a00  
00007b  00                DCB      0
                  |L1.124|
00007c  48617264          DCB      "Hard --2 Spi flash val is 0x%0X \r\n",0
000080  202d2d32
000084  20537069
000088  20666c61
00008c  73682076
000090  616c2069
000094  73203078
000098  25305820
00009c  0d0a00  
00009f  00                DCB      0

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  main PROC
;;;122    
;;;123    int main(void)
000000  f7fffffe          BL       Hardware_AllInit
;;;124    {	
;;;125    	Hardware_AllInit();
;;;126    	
;;;127    #ifdef DEBUG_ENABLE
;;;128    	printk("Using Usart1 Output Debuging Infomation\r\n");
000004  a015              ADR      r0,|L2.92|
000006  f7fffffe          BL       __2printf
;;;129    #endif
;;;130    	
;;;131    	while(1)
00000a  e025              B        |L2.88|
                  |L2.12|
;;;132    	{
;;;133    		Sys_DelayUs(1000);
00000c  f44f707a          MOV      r0,#0x3e8
000010  f7fffffe          BL       Sys_DelayUs
;;;134    		Sys_DelayUs(1000);
000014  f44f707a          MOV      r0,#0x3e8
000018  f7fffffe          BL       Sys_DelayUs
;;;135    		Sys_DelayUs(1000);
00001c  f44f707a          MOV      r0,#0x3e8
000020  f7fffffe          BL       Sys_DelayUs
;;;136    		Sys_DelayUs(1000);
000024  f44f707a          MOV      r0,#0x3e8
000028  f7fffffe          BL       Sys_DelayUs
;;;137    		Bsp_LedTest(500);
00002c  f44f70fa          MOV      r0,#0x1f4
000030  f7fffffe          BL       Bsp_LedTest
;;;138    		
;;;139    	#ifdef ADC_FUNC_TEST
;;;140    		Adc_Init();
;;;141    		App_AdcTest();
;;;142    		
;;;143    	#endif	//ADC_FUNC_TEST
;;;144    
;;;145    #if SPI_COMM_MODE		
;;;146    	#ifdef 	HARD_SPI_COMM
;;;147    		ulFlashIdVal = Flash_ReadJEDECID();
000034  f7fffffe          BL       Flash_ReadJEDECID
000038  4913              LDR      r1,|L2.136|
00003a  6008              STR      r0,[r1,#0]  ; ulFlashIdVal
;;;148    		printf(" hard spi flash val is 0x%0X \r\n", ulFlashIdVal);
00003c  4608              MOV      r0,r1
00003e  6801              LDR      r1,[r0,#0]  ; ulFlashIdVal
000040  a012              ADR      r0,|L2.140|
000042  f7fffffe          BL       __2printf
;;;149    		W25_WriteReadBytes();
000046  f7fffffe          BL       W25_WriteReadBytes
;;;150    
;;;151    	#endif	//HARD_SPI_COMM	
;;;152    #else	
;;;153    	#ifdef SOFT_SPI_COMM	
;;;154    		ulFlashIdVal = Flash_ReadJEDECID();
;;;155    		printf(" soft spi flash val is 0x%0X \r\n", ulFlashIdVal);
;;;156    		W25_WriteReadBytes();
;;;157    	#endif	//SOFT_SPI_COM
;;;158    	
;;;159    #endif	//SPI_COMM_MODE
;;;160    
;;;161    #ifdef I2C_HTU_TEST
;;;162    	Htu_Display();
;;;163    	ee_at24cxx_test();
;;;164    #endif
;;;165    
;;;166    #ifdef UART_FUNC_TEST
;;;167    //	uart_test();
;;;168    #endif
;;;169    
;;;170    #ifdef TIMER_FUNC_TEST
;;;171    	timer_test();
;;;172    #endif
;;;173    
;;;174    	printf("Main is ruinning\r\n");
00004a  a018              ADR      r0,|L2.172|
00004c  f7fffffe          BL       __2printf
;;;175    //	Bsp_LedTest(300);
;;;176    //	sprintf_test();	
;;;177    //	strcpy_test();
;;;178    //	memcmp_test();
;;;179    //  strcmp_test();
;;;180    
;;;181    		delay_ms(500);
000050  f44f70fa          MOV      r0,#0x1f4
000054  f7fffffe          BL       delay_ms
                  |L2.88|
000058  e7d8              B        |L2.12|
;;;182    		
;;;183    //	if (USART_RX_STA)
;;;184    //	{
;;;185    //		printf("mcu will soft reset\r\n");
;;;186    //		NVIC_SystemReset();
;;;187    //		printf("mcu reset ok\r\n");
;;;188    //	}
;;;189    		
;;;190    	}
;;;191    }
;;;192    
                          ENDP

00005a  0000              DCW      0x0000
                  |L2.92|
00005c  5573696e          DCB      "Using Usart1 Output Debuging Infomation\r\n",0
000060  67205573
000064  61727431
000068  204f7574
00006c  70757420
000070  44656275
000074  67696e67
000078  20496e66
00007c  6f6d6174
000080  696f6e0d
000084  0a00    
000086  00                DCB      0
000087  00                DCB      0
                  |L2.136|
                          DCD      ulFlashIdVal
                  |L2.140|
00008c  20686172          DCB      " hard spi flash val is 0x%0X \r\n",0
000090  64207370
000094  6920666c
000098  61736820
00009c  76616c20
0000a0  69732030
0000a4  78253058
0000a8  200d0a00
                  |L2.172|
0000ac  4d61696e          DCB      "Main is ruinning\r\n",0
0000b0  20697320
0000b4  7275696e
0000b8  6e696e67
0000bc  0d0a00  
0000bf  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  ulFlashIdVal
                          DCD      0x00000000

                  __ARM_use_no_argv EQU 0
