; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\drvfreq.o --asm_dir=.\ --list_dir=.\ --depend=.\drvfreq.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\App\inc -I..\Driver\inc -I..\Libraries\CMSIS\Core\inc -I..\Libraries\CMSIS\Device\inc -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\HalIterface\inc -I..\User\inc -I.\RTE\_Target_1 -IC:\Users\18811\Documents\Keil\STM32F1xx_DFP\1.0.5\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=529 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\drvfreq.crf ..\Driver\src\drvfreq.c]
                          THUMB

                          AREA ||i.freq_gpio_input_config||, CODE, READONLY, ALIGN=2

                  freq_gpio_input_config PROC
;;;17     //---------------------------------------------------------------------------------------------------------------------------------------------
;;;18     void freq_gpio_input_config(void)
000000  b508              PUSH     {r3,lr}
;;;19     {
;;;20     	GPIO_InitTypeDef gpio_config;
;;;21     	
;;;22     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);	//使能频率输入GPIOA端口时钟
000002  2101              MOVS     r1,#1
000004  2004              MOVS     r0,#4
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;23     	
;;;24     	gpio_config.GPIO_Pin	= FREQ_INPUT_IO;	//设置GPIOA PA0
00000a  2001              MOVS     r0,#1
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;25     	gpio_config.GPIO_Mode	= GPIO_Mode_IPD;	//PA0 设置为下拉输入
000010  2028              MOVS     r0,#0x28
000012  f88d0003          STRB     r0,[sp,#3]
;;;26     	
;;;27     	GPIO_Init(FREQ_GPIO_PORT, &gpio_config);	//初始化GPIO参数
000016  4669              MOV      r1,sp
000018  4803              LDR      r0,|L1.40|
00001a  f7fffffe          BL       GPIO_Init
;;;28     	
;;;29     	GPIO_ResetBits(FREQ_GPIO_PORT, FREQ_INPUT_IO);	//设置 PA0 初始状态为低电平
00001e  2101              MOVS     r1,#1
000020  4801              LDR      r0,|L1.40|
000022  f7fffffe          BL       GPIO_ResetBits
;;;30     	
;;;31     	return;
;;;32     }
000026  bd08              POP      {r3,pc}
;;;33     	
                          ENDP

                  |L1.40|
                          DCD      0x40010800

                          AREA ||i.timer_counter_config||, CODE, READONLY, ALIGN=2

                  timer_counter_config PROC
;;;44     //---------------------------------------------------------------------------------------------------------------------------------------------
;;;45     void timer_counter_config(uint8_t timer_no, uint16_t timer_arr, uint16_t timer_psc)
000000  b5fe              PUSH     {r1-r7,lr}
;;;46     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;47     	uint8_t temp_value = timer_no;
000008  4627              MOV      r7,r4
;;;48     	
;;;49     	TIM_TimeBaseInitTypeDef timer_init;
;;;50     	
;;;51     	switch (temp_value)
00000a  b137              CBZ      r7,|L2.26|
00000c  2f01              CMP      r7,#1
00000e  d005              BEQ      |L2.28|
000010  2f02              CMP      r7,#2
000012  d004              BEQ      |L2.30|
000014  2f03              CMP      r7,#3
000016  d14c              BNE      |L2.178|
000018  e032              B        |L2.128|
                  |L2.26|
;;;52     	{
;;;53     		case 0:
;;;54     			break;
00001a  e04b              B        |L2.180|
                  |L2.28|
;;;55     		case 1:
;;;56     			break;
00001c  e04a              B        |L2.180|
                  |L2.30|
;;;57     		case 2:
;;;58     		{
;;;59     			RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);	//使能定时器2的时钟
00001e  2101              MOVS     r1,#1
000020  4608              MOV      r0,r1
000022  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;60     			
;;;61     			TIM_DeInit(TIM2);	//复位定时器2的参数值
000026  f04f4080          MOV      r0,#0x40000000
00002a  f7fffffe          BL       TIM_DeInit
;;;62     			
;;;63     			timer_init.TIM_Period			= timer_arr;	//设置重装数值
00002e  f8ad5004          STRH     r5,[sp,#4]
;;;64     			timer_init.TIM_Prescaler		= timer_psc;	//设置分频数值
000032  f8ad6000          STRH     r6,[sp,#0]
;;;65     			timer_init.TIM_ClockDivision	= TIM_CKD_DIV1;	//时钟分割
000036  2000              MOVS     r0,#0
000038  f8ad0006          STRH     r0,[sp,#6]
;;;66     			timer_init.TIM_CounterMode		= TIM_CounterMode_Up;	//计数方式：向上计数
00003c  f8ad0002          STRH     r0,[sp,#2]
;;;67     			
;;;68     			TIM_TimeBaseInit(TIM2, &timer_init);	//初始化定时器2的参数
000040  4669              MOV      r1,sp
000042  f04f4080          MOV      r0,#0x40000000
000046  f7fffffe          BL       TIM_TimeBaseInit
;;;69     			
;;;70     			TIM_ETRClockMode2Config(TIM2, TIM_ExtTRGPSC_OFF, TIM_ExtTRGPolarity_NonInverted, 0);	//外部触发方式
00004a  2300              MOVS     r3,#0
00004c  461a              MOV      r2,r3
00004e  4619              MOV      r1,r3
000050  f04f4080          MOV      r0,#0x40000000
000054  f7fffffe          BL       TIM_ETRClockMode2Config
;;;71     			TIM_SelectInputTrigger(TIM2, TIM_TS_ETRF);	//外部触发输入源设置
000058  2170              MOVS     r1,#0x70
00005a  f04f4080          MOV      r0,#0x40000000
00005e  f7fffffe          BL       TIM_SelectInputTrigger
;;;72     			TIM_SetCounter(TIM2, 0);	//定时器的计数初值设置为0
000062  2100              MOVS     r1,#0
000064  f04f4080          MOV      r0,#0x40000000
000068  f7fffffe          BL       TIM_SetCounter
;;;73     			
;;;74     			TIM_ITConfig(TIM2, TIM_IT_Update, ENABLE);	//使能定时器中断
00006c  2201              MOVS     r2,#1
00006e  4611              MOV      r1,r2
000070  0790              LSLS     r0,r2,#30
000072  f7fffffe          BL       TIM_ITConfig
;;;75     			
;;;76     			TIM_Cmd(TIM2, ENABLE);	//定时器使能
000076  2101              MOVS     r1,#1
000078  0788              LSLS     r0,r1,#30
00007a  f7fffffe          BL       TIM_Cmd
;;;77     		}
;;;78     		break;
00007e  e019              B        |L2.180|
                  |L2.128|
;;;79     		case 3:
;;;80     		{
;;;81     			RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);	//使能定时器3的时钟
000080  2101              MOVS     r1,#1
000082  2002              MOVS     r0,#2
000084  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;82     			
;;;83     			TIM_DeInit(TIM3);	//复位定时器2的参数值
000088  480b              LDR      r0,|L2.184|
00008a  f7fffffe          BL       TIM_DeInit
;;;84     			
;;;85     			timer_init.TIM_Period			= timer_arr;	//设置重装数值
00008e  f8ad5004          STRH     r5,[sp,#4]
;;;86     			timer_init.TIM_Prescaler		= timer_psc;	//设置分频数值
000092  f8ad6000          STRH     r6,[sp,#0]
;;;87     			timer_init.TIM_ClockDivision	= TIM_CKD_DIV1;	//时钟分割
000096  2000              MOVS     r0,#0
000098  f8ad0006          STRH     r0,[sp,#6]
;;;88     			timer_init.TIM_CounterMode		= TIM_CounterMode_Up;	//计数方式：向上计数
00009c  f8ad0002          STRH     r0,[sp,#2]
;;;89     			
;;;90     			TIM_TimeBaseInit(TIM3, &timer_init);	//初始化定时器2的参数
0000a0  4669              MOV      r1,sp
0000a2  4805              LDR      r0,|L2.184|
0000a4  f7fffffe          BL       TIM_TimeBaseInit
;;;91     			
;;;92     		#if 0
;;;93     			TIM_ETRClockMode2Config(TIM3, TIM_ExtTRGPSC_OFF, TIM_ExtTRGPolarity_NonInverted, 0);	//外部触发方式
;;;94     			TIM_SelectInputTrigger(TIM3, TIM_TS_ETRF);	//外部触发输入源设置
;;;95     			TIM_SetCounter(TIM3, 0);	//定时器的计数初值设置为0
;;;96     			
;;;97     			TIM_ITConfig(TIM3, TIM_IT_Update, ENABLE);	//使能定时器中断
;;;98     		#endif
;;;99     			TIM_Cmd(TIM3, ENABLE);	//定时器使能
0000a8  2101              MOVS     r1,#1
0000aa  4803              LDR      r0,|L2.184|
0000ac  f7fffffe          BL       TIM_Cmd
;;;100    		}
;;;101    		
;;;102    		default:
0000b0  bf00              NOP      
                  |L2.178|
;;;103    			break;
0000b2  bf00              NOP      
                  |L2.180|
0000b4  bf00              NOP                            ;54
;;;104    	}
;;;105    	return;
;;;106    }
0000b6  bdfe              POP      {r1-r7,pc}
;;;107    
                          ENDP

                  |L2.184|
                          DCD      0x40000400

                          AREA ||i.timer_counter_nvic_config||, CODE, READONLY, ALIGN=1

                  timer_counter_nvic_config PROC
;;;116    //---------------------------------------------------------------------------------------------------------------------------------------------
;;;117    void timer_counter_nvic_config(uint8_t timer_no)
000000  b538              PUSH     {r3-r5,lr}
;;;118    {
000002  4604              MOV      r4,r0
;;;119    	uint8_t temp_value = timer_no;
000004  4625              MOV      r5,r4
;;;120    	
;;;121    	NVIC_InitTypeDef nvic_config;
;;;122    	
;;;123    	if (temp_value == 2)
000006  2d02              CMP      r5,#2
000008  d10e              BNE      |L3.40|
;;;124    	{
;;;125    		nvic_config.NVIC_IRQChannel						= TIM2_IRQn;	//TIM2中断
00000a  201c              MOVS     r0,#0x1c
00000c  f88d0000          STRB     r0,[sp,#0]
;;;126    		nvic_config.NVIC_IRQChannelPreemptionPriority	= 0;	//抢占优先级
000010  2000              MOVS     r0,#0
000012  f88d0001          STRB     r0,[sp,#1]
;;;127    		nvic_config.NVIC_IRQChannelSubPriority			= 0;	//子优先级
000016  f88d0002          STRB     r0,[sp,#2]
;;;128    		nvic_config.NVIC_IRQChannelCmd					= ENABLE;	//使能中断通道
00001a  2001              MOVS     r0,#1
00001c  f88d0003          STRB     r0,[sp,#3]
;;;129    		
;;;130    		NVIC_Init(&nvic_config);	//初始化NVIC配置参数
000020  4668              MOV      r0,sp
000022  f7fffffe          BL       NVIC_Init
000026  e00f              B        |L3.72|
                  |L3.40|
;;;131    	}
;;;132    	else if (temp_value == 3)
000028  2d03              CMP      r5,#3
00002a  d10d              BNE      |L3.72|
;;;133    	{
;;;134    		nvic_config.NVIC_IRQChannel						= TIM3_IRQn;	//TIM3中断
00002c  201d              MOVS     r0,#0x1d
00002e  f88d0000          STRB     r0,[sp,#0]
;;;135    		nvic_config.NVIC_IRQChannelPreemptionPriority	= 0;	//抢占优先级
000032  2000              MOVS     r0,#0
000034  f88d0001          STRB     r0,[sp,#1]
;;;136    		nvic_config.NVIC_IRQChannelSubPriority			= 1;	//子优先级
000038  2001              MOVS     r0,#1
00003a  f88d0002          STRB     r0,[sp,#2]
;;;137    		nvic_config.NVIC_IRQChannelCmd					= ENABLE;	//使能中断通道
00003e  f88d0003          STRB     r0,[sp,#3]
;;;138    		
;;;139    		NVIC_Init(&nvic_config);	//初始化NVIC配置参数
000042  4668              MOV      r0,sp
000044  f7fffffe          BL       NVIC_Init
                  |L3.72|
;;;140    	}
;;;141    	
;;;142    	return;
;;;143    }
000048  bd38              POP      {r3-r5,pc}
;;;144    
                          ENDP

